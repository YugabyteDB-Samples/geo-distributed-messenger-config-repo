server.port=8080
spring.cloud.config.uri=http://localhost:8888

# Loggin all queries with their execution time
logging.level.org.hibernate.stat=INFO
# spring.jpa.properties.hibernate.show_sql=true
# spring.jpa.properties.hibernate.generate_statistics=true

# JPA configuration
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=false

# Schema initialization
spring.sql.init.mode=always

# set the property to either `classpath:messenger_schema.sql` or `classpath:messenger_schema_partitioned.sql`
spring.sql.init.schema-locations=classpath:messenger_schema.sql 
spring.sql.init.continue-on-error=true

# HikariCP configuration
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.schema=messenger

# YugabyteDB configuration for local deployments
spring.datasource.url = jdbc:postgresql://127.0.0.1:5433/yugabyte
spring.datasource.username = yugabyte
spring.datasource.password = yugabyte

# Optional property, adjust if you plan to change a database connection
# dynamically in Google Cloud with Runtime Configurator.
# The application recognizes the following property when connecting to a YugabyteDB data source:
# * 'standard' - the data source is connected to a standard/regular node. 
# * 'replica' - the connection goes via a replica node.
# * 'geo' - the data source is connected to a geo-partitioned cluster.
yugabytedb.connection.type=standard