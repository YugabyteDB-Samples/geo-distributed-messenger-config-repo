server.port=${MESSAGING_SERVICE_PORT:80}

# Spring Cloud Config Server settings
spring.cloud.config.uri=http://${CONFIG_SERVER_HOST:localhost}:${CONFIG_SERVER_PORT:8888}

# Spring Cloud Discovery Service Settings
k8.attachments.service.host=${ATTACHMENTS_SERVICE_HOST}
k8.attachments.service.port=${ATTACHMENTS_SERVICE_PORT}

# Loggin all queries with their execution time
logging.level.org.hibernate.stat=INFO
# spring.jpa.properties.hibernate.show_sql=true
# spring.jpa.properties.hibernate.generate_statistics=true

# JPA configuration
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=false

# Schema initialization
spring.sql.init.mode=always

# set the property to either `classpath:messenger_schema.sql` or `classpath:messenger_schema_partitioned.sql`
spring.sql.init.schema-locations=classpath:messenger_schema.sql 
spring.sql.init.continue-on-error=true

# HikariCP configuration
spring.datasource.hikari.schema=messenger
spring.datasource.hikari.maximum-pool-size=25

# YugabyteDB configuration
dataSourceClassName = ${DB_DATASOURCE_NAME:com.yugabyte.ysql.YBClusterAwareDataSource}
dataSource.serverName = ${DB_PRIMARY_ENDPOINT}
dataSource.portNumber = ${DB_PORT:5433}
dataSource.databaseName = yugabyte
dataSource.user = ${DB_USER}
dataSource.password = ${DB_PWD}

dataSource.additionalEndpoints = ${DB_ADDITIONAL_ENDPOINTS:}

# Optional property, adjust if you plan to change a database connection
# dynamically in Google Cloud with Runtime Configurator.
# The application recognizes the following property when connecting to a YugabyteDB data source:
# * 'standard' - the data source is connected to a standard/regular node. 
# * 'replica' - the connection goes via a replica node.
# * 'geo' - the data source is connected to a geo-partitioned cluster.
yugabytedb.connection.type=${DB_MODE}